# Unique name for this workflow
name: sfpowerscripts build and deploy

# Definition when the workflow should run
on:
    push:
        branches:
            - develop
        # paths:
        #     - 'es-base-code/**'
        #     - 'es-base-objects/**'
        #     - 'es-base-styles/**'
        #     - 'es-space-mgmt/**'

# Jobs to be executed
jobs:
    packaging:
        runs-on: ubuntu-latest
        steps:
            # Install Salesforce CLI
            - name: Install Salesforce CLI
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
                  mkdir sfdx-cli
                  tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
                  ./sfdx-cli/install

            # Install sfpowerkit
            - name: Install sfpowerkit
              run: |
                  echo'y' | sfdx plugins:install sfpowerkit

             # Install sfpowerscripts
            
            - name: Install sfpowerscripts
              run: |
                  echo 'y' | sfdx plugins:install @dxatscale/sfpowerscripts@alpha

            # Checkout the code
            - name: 'Checkout source code'
              uses: actions/checkout@v2

            # Store secret for dev hub
            - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
              shell: bash
              run: 'echo ${{ secrets.DEVHUB_SFDX_URL}} > ./DEVHUB_SFDX_URL.txt'

            # Authenticate dev hub
            - name: 'Authenticate Dev Hub'
              run: 'sfdx force:auth:sfdxurl:store -f ./DEVHUB_SFDX_URL.txt -a devhub -d'

            # Remove auth files
            - name: 'Remove auth files'
              run: rm -f ./DEVHUB_SFDX_URL.txt

            # Create all packages
            - name: 'Create packages'
              id: sfpowerscripts-build
              run: 'sfdx sfpowerscripts:orchestrator:build -v devhub'

            
            # Wait for package replication
            - name: 'Wait for package replication'
              uses: maddox/actions/sleep@master
              with:
                  args: 300

            # Create scratch org
            - name: Create scratch org
              run: sfdx force:org:create -f config/project-scratch-def.json -a scratch-org -s -d 1

            # Install all new packages into scratch org
            - name: 'Install new package versions into scratch org'
              if: steps.extract-data-package-version-create-baseObj.outputs.isSuccess && steps.extract-data-package-version-create-baseCode.outputs.isSuccess && steps.extract-data-package-version-create-baseStyles.outputs.isSuccess && steps.extract-data-package-version-create-spaceMgmt.outputs.isSuccess
              run: 'sfdx sfpowerscripts:orchestrator:deploy -u scratchorg'

     
            # Housekeeping
            - name: Delete scratch org
              if: always()
              run: sfdx force:org:delete -p -u scratch-org
